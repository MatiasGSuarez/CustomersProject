INTUIT CHALLENGE
1- CREAR PROYECTO "INTUIT CHALLENGE" CON ASP.NET CORE WEB API
2- CREAR DENTRO DE LA SOLUCION UN PROYECTO, EN ESTE CASO ES UNA BIBLIOTECA DE CLASES QUE LLAME "MODEL"
3- EN MODEL CREE LA "BaseClass" QUE VA A CONTENER PROPIEDADES COMUNES A TODAS LAS CLASES.
4- CREAR LA CLASE "Customer" QUE ES LA QUE SE SOLICITA EN LAS CONSIGNAS DEL CHALLENGE.
5- ESTABLECER LA CONNECTION STRING EN appsetings.json EN IntuitChallengeAPI
6- CREAR DBMODEL CONTEXT EN EL PROYECTO MODEL
7- INSTALAR LAS DEPENDENCIAS NECESARIAS EN EL PROYECTO MODEL Y EN EL PROYECTO INTUIT CHALLENGE API
8- CREAR CLASE QUE HEREDE DE DBCONTEXT(EN ESTE CASO DBMODELCONTEXT) YA QUE ESO ES LO QUE USARA ENTITY FRAMEWORK PARA CONECTARSE A LA BASE DE DATOS MEDIANTE
 LA CONNECTION STRING EN "OnConfiguring"
Y DEFINE QUE OBJETOS SE CREAN CON EL METODO "onModelCreating" Y SETEAMOS CUALES TABLAS SE VAN A MIGRAR.
9- DESDE EL PROYECTO MODEL REALIZAR MIGRACIONES, EN LA CONSOLA DEL ADMINISTRADOR DE PAQUETES CON EL COMANDO 
Add-Migration NewMigration -Project Model, ESTO PERMITE CONVERTIR EL MODELO, EN ESTE CASO LA CLASE 'Customer'.
LUEGO DEBEMOS UPDATEAR LA MIGRACION PARA QUE SE APLIQUE EN LA BASE DE DATOS CON EL SIGUIENTE COMANDO:
Update-Database -Project Model
10- SI CHEQUEAMOS LA BASE DE DATOS DEBERIA ESTAR CREADA LA TABLA CON EL NOMBRE, EN ESTE CASO dbo.Customers.
11 - ACTION RESULT ES UNA CLASE PROPIA DE ASP.NET CORE QUE TIENE PROPIEDADES QUE REPRESENTAN LOS RESULTADOS Y LAS RESPUESTAS DE LAS OPERACIONES REST.
12 - "From Route" SE REFIERE A QUE VA EN LA RUTA DEL ENLACE DE CONSULTA, ejemplo quedaria get/customer/{id} (donde id seria un numero).
"From Body"  se obtienen datos enviados desde el cuerpo de una solicitud HTTP.
"From Query" 